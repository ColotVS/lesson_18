public class lesson_18_27 {
    //default реализация в методах интерфейсов

    //Абстрактные классы могут иметь переменные и реализацию методов, но для них множественное наследование запрещено.
    //Интерфейсы не могут иметь переменные и реализации методов, и для них множественное наследование разрешено.

    //Можно эту ситуацию выразить в таблице:

    //Способность	        Абстрактные классы	Интерфейсы
    //Переменные	                ✔	            ✖
    //Реализация методов	        ✔	            ✖
    //Множественное наследование	✖	            ✔

    //И вот некоторым программистам очень хотелось, чтобы у интерфейсов была возможность иметь реализацию методов.
    //Иметь возможность добавить реализацию метода — это же не значит, что ее всегда обязательно будут добавлять.
    //Хочешь добавляй, хочешь — нет.

    //К тому же, проблемы с множественным наследованием в первую очередь из-за переменных.
    //В общем, решили и сделали. Начиная с JDK 8, в Java появилась возможность добавлять в интерфейсы методы с реализацией.

    //Новая актуальная таблица (для JDK 8 и выше):

    //Способность	        Абстрактные классы	Интерфейсы
    //Переменные	                ✔	            ✖
    //Реализация методов	        ✔	            ✔
    //Множественное наследование	✖	            ✔

    //Теперь и в абстрактных классах, и в интерфейсах можно объявлять как методы с реализацией, так и без нее. И это отличная новость!
    //В абстрактных классах перед методами без реализации нужно писать ключевое слово abstract,
    //а перед методами с реализацией ничего добавлять не нужно. В интерфейсах же все наоборот.
    //Если у метода нет реализации, ничего добавлять не нужно, если же реализация есть, нужно добавить ключевое слово default.

    //Для простоты приведем эту информацию в виде небольшой таблички:

    //Способность	            Абстрактные классы	    Интерфейсы
    //Методы без реализации	        abstract	            –
    //Методы с реализацией	            –	            default


}
